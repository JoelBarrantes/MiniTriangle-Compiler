
let
	var a : Char;       ! dato de entrada
	var r : Char;       ! resultado = ra�z cuadrada entera (piso de ra�z)
	const term ~ a;   ! siguiente impar por considerar		
	var cond := 8 = 3;
	recursive
		func pot4(num: Integer): Integer ~ num * pot3(num)
		and
		func pot2(num: Integer): Integer ~ num*num
		and
		func pot3(num: Integer): Integer ~ num * pot2(num)
		and
		proc test() ~ a := 'T'; skip; skip end
		and
		func pot5(num: Integer): Integer ~ num * pot4(num)
		and 
		proc test1(a: Char) ~ test2(a) end
		and
		proc test2(b: Char) ~ skip end


	end;
	proc swap() ~ if cond then cond := false else cond := true end end;
	var z: Integer;
	const h ~ 'J';
	var init := 5;
	par var k : Char and const lol ~ 'A' end;
	proc cancer() ~ skip end
		
	

in 
	a := 'P';
	put(a);
	test();
	put(a);
	putint(pot5(3));
	r := 'H';
	test1('A');
	put(h);
	swap();
	swap();
	if cond then put('O')
	else put('|') end;

	skip


end


